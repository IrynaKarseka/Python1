# Задача 22: 
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа.
# n — кол-во элементов первого множества. 
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# set_1 = set() 
# set_2 = set()

# n = int(input('Введите кол-во элементов первого множества '))
# m = int(input('Введите кол-во элементов второго множества '))

# count = 1
# for i in range(n):
#     set_1.add(int(input(f'Заполните первое множества. Введите {count} число из {n}: ')))
#     count += 1

# count = 1
# for i in range(m):
#     set_2.add(int(input(f'Заполните второе множества. Введите {count} число из {m}: ')))
#     count += 1

# intersection_set = set(set_1 & set_2)

# print(sorted(intersection_set), '<- Вывод без повторений в порядке возрастания')

# # Задача 24: 
# В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, 
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном файле грядки.

# from random import randint
# N_bushes = 4 # количество кустов
# round_garden_bed = list(randint(0, 10) for i in range(N_bushes)) # Круглая грядка заполненная кустами с случайным количеством ягод

# print(round_garden_bed)
# max_number_berries = 0
# sum_berries = 0

# for i in range(len(round_garden_bed)):

#     if i < len(round_garden_bed) - 1:
#         sum_berries = round_garden_bed[i] + round_garden_bed[i - 1] + round_garden_bed[i + 1]
#     else: 
#         sum_berries = round_garden_bed[i] + round_garden_bed[i - 1] + round_garden_bed[0]

#     if sum_berries >= max_number_berries:
#         max_number_berries = sum_berries

# print(max_number_berries, ' <- Максимальное число ягод')